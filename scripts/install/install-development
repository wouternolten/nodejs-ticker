#!/bin/bash

NETRC_FILE=~/.netrc

if [ ! -f "$NETRC_FILE" ]; then
  echo -e "${RED}Cannot find "${NETRC_FILE}", please configure your credentials.${DEFAULT}"
  exit 1
fi

if ! grep -q "machine github.com" $NETRC_FILE; then
  echo -e "${RED}Cannot find github.com in "${NETRC_FILE}", please configure your credentials.${DEFAULT}"
  exit 1
fi

# Do an npm install
echo -e "${CYAN}Installing npm packages.${DEFAULT}"
npm install --no-progress --loglevel=error

# Start Docker
echo -e "${CYAN}Starting docker.${DEFAULT}"
open -g -a Docker
while ! docker ps > /dev/null 2>&1 ; do sleep 2; done

# Stop all active containers.
echo -e "${CYAN}Stopping the current active containers.${DEFAULT}"
docker-compose down --volumes > /dev/null 2>&1
docker stop $(docker ps -aq) > /dev/null 2>&1

# Up the docker containers
echo -e "${CYAN}Installing database container.${DEFAULT}"
DOCKER_HOST_IP=`ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p' | sed -n 1p` docker-compose up -d --build mysql-main-database

echo -e "${CYAN}Waiting for mysql to be ready...${DEFAULT}"
while ! docker logs ticker-mysql-main-database  2>&1 | grep -q 'ready for connections.'; do sleep 2; done
echo -e "${CYAN}Ready to receive your connections.${DEFAULT}"

echo -e  "${CYAN}Installing back- and frontend containers.${DEFAULT}"
DOCKER_HOST_IP=`ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p' | sed -n 1p` docker-compose up -d --build frontend-ticker backend-ticker

# Perform migrations.
make migrate
